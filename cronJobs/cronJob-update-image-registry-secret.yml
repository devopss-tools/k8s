apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ${K8S_APP_NAMESPACE}-update-image-registry-secrets
  namespace: ${K8S_APP_NAMESPACE}
spec:
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  schedule: "*/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          initContainers:
          - name: ${K8S_APP_NAMESPACE}-cron-job-delete-secret
            image: bitnami/kubectl:1.18
            command:
              - /bin/bash
              - '-c'
            args:
              - '${symb}DELETE_SECRET_1 & ${symb}DELETE_SECRET_2'
            env:
              - name: DELETE_SECRET_1
                value: "kubectl delete secret ${K8S_APP_NAMESPACE}-image-registry-secret --ignore-not-found -n ${K8S_APP_NAMESPACE} --kubeconfig ./kubeconfig"
              - name: DELETE_SECRET_2
                value: "kubectl delete secret ${K8S_APP_NAMESPACE}-platform-image-registry-secret --ignore-not-found -n ${K8S_APP_NAMESPACE} --kubeconfig ./kubeconfig"
            volumeMounts:
              - name: ${K8S_APP_NAMESPACE}-kubeconfig-volume
                mountPath: ./kubeconfig
                subPath: config
            imagePullPolicy: IfNotPresent
          containers:
          - name: ${K8S_APP_NAMESPACE}-cron-job-create-secret
            image: bitnami/kubectl:1.18
            command:
              - /bin/bash
              - '-c'
            args:
              - '${symb}CREATE_SECRET_1 & ${symb}CREATE_SECRET_2'
            env:
              - name: CREATE_SECRET_1
                value: "kubectl create secret docker-registry ${K8S_APP_NAMESPACE}-image-registry-secret --docker-server=${K8S_DOCKER_IMAGE} --docker-username=${K8S_DOCKER_REP_USER} --docker-password=${K8S_DOCKER_REP_PSWD} -n ${K8S_APP_NAMESPACE} --kubeconfig ./kubeconfig"
              - name: CREATE_SECRET_2
                value: "kubectl create secret docker-registry ${K8S_APP_NAMESPACE}-platform-image-registry-secret --docker-server=${K8S_DOCKER_IMAGE} --docker-username=${K8S_DOCKER_REP_USER} --docker-password=${K8S_DOCKER_REP_PSWD} -n ${K8S_APP_NAMESPACE} --kubeconfig ./kubeconfig"
            volumeMounts:
              - name: ${K8S_APP_NAMESPACE}-kubeconfig-volume
                mountPath: ./kubeconfig
                subPath: config
            imagePullPolicy: IfNotPresent
          volumes:
            - name: ${K8S_APP_NAMESPACE}-kubeconfig-volume
              configMap:
                name: ${K8S_APP_NAMESPACE}-kubeconfig-configmap
